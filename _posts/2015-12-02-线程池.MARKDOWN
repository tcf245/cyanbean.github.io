---
layout: post
title:  "线程池"
date:   2015-12-02 22:16:24
author: CyanBean
categories: Java
tags:	Java Thread
cover:  "assets/instacode.png"
--- 
我们知道，如果希望启动一个线程来完成指定的任务，首先要创建线程对象，而且任务执行完毕后线程自动死亡(一般成为线程垃圾)，也不能再启动执行了。这种模式在很多情况下会严重影响程序的执行性能，因为创建线程对象与清楚县城垃圾都会占用大量CPU等系统资源，在这种情况下，使用线程池就可以很好的解决这种资源浪费的问题。

使用线程池来避免资源浪费的思想就是：在系统中开辟一块区域，其中存放一些待命的线程，这个区域被称为线程池。如果又需要执行的任务，则从线程池中借一个待命的线程来执行指定的任务，到任务结束吧所有线程归还。这样就避免了大量重复创建线程对象，浪费CPU、内存资源的问题。 

  实际开发中可以有各种不同的类型的线程池： 

  * 固定尺寸的线程池 

  在这种线程池中，待命线程的数量是一定的，其优点是实现简单。但是这种线程池也有很多缺点，如果需要执行的任务很多，则有可能造成大量的等待；如果需要执行的任务很少，大量待命的线程也可能造成内存的浪费。 

  * 可变尺寸的线程池 
  
  这种线程池中待命线程的数量是根据任务负载的需要动态变化的：如果等待执行任务很多，系统会自动扩充待命线程的数量，提高执行效率；如果任务较少，则系统会自动缩减待命线程的数量，减少内存消耗。这种线程池能够很好地克服固定线程池的缺点，但实现起来要复杂的多。


